/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kxbjava;

import com.formdev.flatlaf.FlatDarkLaf;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.commons.io.FilenameUtils;

/**
 *
 * @author User
 */
public class APUUserProfile extends javax.swing.JFrame {
    
    private String FileDir, currentUserID, userID, userRole, ManagerID, imgDir, fullID;
    /**
     * Creates new form APUUserProfile
     */
    public APUUserProfile() throws IOException {
        initComponents();
        initForm();
    }

    private void setLogo() {
        String sourcefolder = System.getProperty("user.dir") + "\\src\\icons\\";
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(sourcefolder + "AHHASCrsmol.png"));
        this.setTitle("AHHASC User Profile Page");

    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPnl = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        cmbGender = new javax.swing.JComboBox<>();
        lblGender = new javax.swing.JLabel();
        txtPassField = new javax.swing.JPasswordField();
        lblPassword = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtUserID = new javax.swing.JTextField();
        lblUserID = new javax.swing.JLabel();
        txtPhoneNumber = new javax.swing.JTextField();
        lblPhoneNumber = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblFullName = new javax.swing.JLabel();
        txtFullName = new javax.swing.JTextField();
        iconNoSee = new javax.swing.JLabel();
        iconSee = new javax.swing.JLabel();
        lblDesc = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        profilePnl = new javax.swing.JPanel();
        lblSelectedPic = new javax.swing.JLabel();
        lblPfp = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnSelectImg = new javax.swing.JButton();
        btnPnl = new javax.swing.JPanel();
        btnUpdate = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        chkpass = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mainPnl.setBackground(new java.awt.Color(68, 68, 68));
        mainPnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(68, 68, 68));

        cmbGender.setBackground(new java.awt.Color(68, 68, 68));
        cmbGender.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        cmbGender.setForeground(new java.awt.Color(237, 237, 237));
        cmbGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Gender", "Male", "Female" }));
        cmbGender.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(237, 237, 237)));
        cmbGender.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        lblGender.setBackground(new java.awt.Color(68, 68, 68));
        lblGender.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblGender.setForeground(new java.awt.Color(237, 237, 237));
        lblGender.setText("Gender");

        txtPassField.setBackground(new java.awt.Color(68, 68, 68));
        txtPassField.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        txtPassField.setForeground(new java.awt.Color(237, 237, 237));
        txtPassField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(237, 237, 237)));

        lblPassword.setBackground(new java.awt.Color(68, 68, 68));
        lblPassword.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblPassword.setForeground(new java.awt.Color(237, 237, 237));
        lblPassword.setText("Password");

        txtEmail.setBackground(new java.awt.Color(68, 68, 68));
        txtEmail.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        txtEmail.setForeground(new java.awt.Color(237, 237, 237));
        txtEmail.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(237, 237, 237)));

        lblEmail.setBackground(new java.awt.Color(68, 68, 68));
        lblEmail.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblEmail.setForeground(new java.awt.Color(237, 237, 237));
        lblEmail.setText("Email");

        txtUserID.setEditable(false);
        txtUserID.setBackground(new java.awt.Color(68, 68, 68));
        txtUserID.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        txtUserID.setForeground(new java.awt.Color(237, 237, 237));
        txtUserID.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(237, 237, 237)));

        lblUserID.setBackground(new java.awt.Color(68, 68, 68));
        lblUserID.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblUserID.setForeground(new java.awt.Color(237, 237, 237));
        lblUserID.setText("User ID");

        txtPhoneNumber.setBackground(new java.awt.Color(68, 68, 68));
        txtPhoneNumber.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        txtPhoneNumber.setForeground(new java.awt.Color(237, 237, 237));
        txtPhoneNumber.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(237, 237, 237)));

        lblPhoneNumber.setBackground(new java.awt.Color(68, 68, 68));
        lblPhoneNumber.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblPhoneNumber.setForeground(new java.awt.Color(237, 237, 237));
        lblPhoneNumber.setText("Phone Number");

        lblUsername.setBackground(new java.awt.Color(68, 68, 68));
        lblUsername.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblUsername.setForeground(new java.awt.Color(237, 237, 237));
        lblUsername.setText("Username");

        txtUsername.setBackground(new java.awt.Color(68, 68, 68));
        txtUsername.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        txtUsername.setForeground(new java.awt.Color(237, 237, 237));
        txtUsername.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(237, 237, 237)));

        lblFullName.setBackground(new java.awt.Color(68, 68, 68));
        lblFullName.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblFullName.setForeground(new java.awt.Color(237, 237, 237));
        lblFullName.setText("Full Name");

        txtFullName.setBackground(new java.awt.Color(68, 68, 68));
        txtFullName.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        txtFullName.setForeground(new java.awt.Color(237, 237, 237));
        txtFullName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(237, 237, 237)));

        iconNoSee.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/nosee.png"))); // NOI18N
        iconNoSee.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iconNoSee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                iconNoSeeMousePressed(evt);
            }
        });

        iconSee.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/see.png"))); // NOI18N
        iconSee.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iconSee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                iconSeeMousePressed(evt);
            }
        });

        lblDesc.setBackground(new java.awt.Color(68, 68, 68));
        lblDesc.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblDesc.setForeground(new java.awt.Color(255, 255, 255));
        lblDesc.setText("View or Update Your Information Details");

        lblTitle.setBackground(new java.awt.Color(68, 68, 68));
        lblTitle.setFont(new java.awt.Font("Arial", 1, 38)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(214, 41, 99));
        lblTitle.setText("User Profile");

        profilePnl.setBackground(new java.awt.Color(51, 51, 51));
        profilePnl.setPreferredSize(new java.awt.Dimension(200, 200));
        profilePnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblSelectedPic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/defaultUser.png"))); // NOI18N
        profilePnl.add(lblSelectedPic, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 200));

        lblPfp.setBackground(new java.awt.Color(68, 68, 68));
        lblPfp.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblPfp.setForeground(new java.awt.Color(237, 237, 237));
        lblPfp.setText("Profile Picture");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Only .png are supported!");

        btnSelectImg.setBackground(new java.awt.Color(68, 68, 68));
        btnSelectImg.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnSelectImg.setForeground(new java.awt.Color(237, 237, 237));
        btnSelectImg.setText("Choose Image");
        btnSelectImg.setToolTipText("Button to reset every fields");
        btnSelectImg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        btnSelectImg.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSelectImg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectImgActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtEmail)
                                .addComponent(txtPassField)
                                .addComponent(txtUserID)
                                .addComponent(cmbGender, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(4, 4, 4)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(iconSee)
                                .addComponent(iconNoSee))
                            .addGap(42, 42, 42))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblPassword)
                                .addComponent(lblEmail)
                                .addComponent(lblGender))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUserID)
                            .addComponent(lblTitle)
                            .addComponent(lblDesc))
                        .addGap(162, 162, 162)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUsername)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblPhoneNumber)
                                .addComponent(txtUsername, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblPfp))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(lblFullName)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(profilePnl, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnSelectImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(txtFullName))
                        .addContainerGap())))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTitle)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(lblDesc)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblUserID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblPfp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(profilePnl, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSelectImg, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(64, 64, 64)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmail)
                    .addComponent(lblFullName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(lblUsername))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPassField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(iconSee)
                            .addComponent(iconNoSee))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGender)
                            .addComponent(lblPhoneNumber))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbGender, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        mainPnl.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 1190, 570));

        btnPnl.setBackground(new java.awt.Color(68, 68, 68));

        btnUpdate.setBackground(new java.awt.Color(68, 68, 68));
        btnUpdate.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(237, 237, 237));
        btnUpdate.setText("Update");
        btnUpdate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        btnUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(68, 68, 68));
        btnBack.setFont(new java.awt.Font("Segoe UI Variable", 0, 18)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout btnPnlLayout = new javax.swing.GroupLayout(btnPnl);
        btnPnl.setLayout(btnPnlLayout);
        btnPnlLayout.setHorizontalGroup(
            btnPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnPnlLayout.createSequentialGroup()
                .addContainerGap(793, Short.MAX_VALUE)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        btnPnlLayout.setVerticalGroup(
            btnPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnPnlLayout.createSequentialGroup()
                .addContainerGap(7, Short.MAX_VALUE)
                .addGroup(btnPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );

        mainPnl.add(btnPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 620, 1280, 100));

        chkpass.setFocusable(false);
        chkpass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkpassActionPerformed(evt);
            }
        });
        mainPnl.add(chkpass, new org.netbeans.lib.awtextra.AbsoluteConstraints(1260, 10, -1, -1));

        getContentPane().add(mainPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    // <editor-fold defaultstate="collapsed" desc="Methods">
    
    private void selectImage() {

        try {
            JFileChooser fileChooser = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("3 Extensions Supported", "Jpg", "png", "jpeg");
            fileChooser.setFileFilter(filter);
            int selected = fileChooser.showOpenDialog(null);
            if (selected == JFileChooser.APPROVE_OPTION) { //Opens Window To Select Image File To Upload As Thumbnail Image.

                File file = fileChooser.getSelectedFile(); //Store Image as File Object.
                String getselectedImage = file.getAbsolutePath(); //Assigns Variable Containing Directory Where It Was Selected.

                BufferedImage bufImg = ImageIO.read(new File(getselectedImage));
                Image imgScale = bufImg.getScaledInstance(200, 200, Image.SCALE_SMOOTH);
                ImageIcon scaledIcon = new ImageIcon(imgScale);

                lblSelectedPic.setIcon(scaledIcon); //Sets Icon Image on Label As A Preview.
                imgDir = getselectedImage; //Sets Directory of Selected Image Which Will Be Sent To the insertData() Method.

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error Occured While Trying To Retrieve Image");
        }

    }
    
    private void saveImage() {

        File file = new File(imgDir); //Create A File Object With The Directory of the Selected Image.

        String source = System.getProperty("user.dir"); //Retrieving Directory of The Source Files.
        String destination = source + "\\src\\UserProfilePictures\\"; //Sets the Directory Folder Containing Thumbnail Image Files.
        String extensionName = FilenameUtils.getExtension(imgDir); // Retrieve File Extension of Selected File.
        String newFileName = destination + userID + "." + "png"; // Assigning New Directory and New Image Filename.

        File newFile = new File(newFileName);  // Create File Objects of the Image File That Will Be Transfered To The Source Folder.
        File oriFileName = new File(destination);

        if (newFile.exists()) { //Checks If An Image With The Same Name Already Exist.
            Path imagesPath = Paths.get(newFileName);
            try {
                Files.delete(imagesPath);
            } catch (IOException ex) {

            }
        }

        try {

            Files.copy(file.toPath(), newFile.toPath(), StandardCopyOption.REPLACE_EXISTING); //Copies File To The Thumbnail Image Folder.
            boolean success = oriFileName.renameTo(newFile); //After Copying, The Image Will Be Renamed.

            if (!success) {
                // File was not successfully renamed
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

    }
    
    private void loadUserProfile() throws IOException{
        String[] matchedID = null;
        FileDir = System.getProperty("user.dir") + "\\src\\TextFiles\\";
        File usertext = new File(FileDir + "UserCache.txt");
        Scanner intUser;
        try {
            intUser = new Scanner(usertext);
            while (intUser.hasNext())
            {
             String bEntry = intUser.nextLine();
             matchedID = bEntry.split(":");
             
             //fetching the data
             userID = matchedID[0];
             ManagerID = matchedID[1];
             userRole = matchedID[2];
             
             //load data to textfields
             txtUserID.setText(userID);
             txtFullName.setText(matchedID[3]);
             txtEmail.setText(matchedID[4]);
             txtUsername.setText(matchedID[5]);
             txtPassField.setText(matchedID[6]);
             txtPhoneNumber.setText(matchedID[7]);
              switch (matchedID[8]) {
                        case "Male":
                            cmbGender.setSelectedIndex(1);
                            break;
                        case "Female":
                            cmbGender.setSelectedIndex(2);
                            break;
                        default:
                            cmbGender.setSelectedIndex(1);
                    }
              
               // To set profile picture on label
                    File imgPng = new File(System.getProperty("user.dir") + "\\src\\UserProfilePictures\\" + userID + ".png");
                    String identifiedImg;
                    if (imgPng.exists()) {
                        identifiedImg = System.getProperty("user.dir") + "\\src\\UserProfilePictures\\" + userID + ".png";
                    } else {
                        identifiedImg = System.getProperty("user.dir") + "\\src\\Icons\\defaultUser.png";
                    }
                    BufferedImage bufImg = ImageIO.read(new File(identifiedImg));
                    Image imgScale = bufImg.getScaledInstance(200, 200, Image.SCALE_SMOOTH);
                    ImageIcon scaledIcon = new ImageIcon(imgScale);
                    lblSelectedPic.setIcon(scaledIcon);
                    
                }
            intUser.close();
        } catch (FileNotFoundException ex) {
            //Logger.getLogger(.class.getName()).log(Level.SEVERE, null, ex);
        }
    } 
    private void loadnewUserProfile(){
        // Assigning the cID to the selected index value
       // cID = (String) cbxClientID.getSelectedItem();
        // This is to ensure the entire method have access to borrow matchedID array
        String[] matchedID = null;
        FileDir = System.getProperty("user.dir") + "\\src\\TextFiles\\";
        // For debugging purpose only
        // JOptionPane.showMessageDialog(null, bID);
        File clienttxt = new File(FileDir + "UserProfile.txt");
        Scanner intClient;
        try {
            // This part loads all book information
            intClient = new Scanner(clienttxt);
            // Read lines from the file until no more are left.
            while (intClient.hasNext())
            {
                // Read the next line.
                String bEntry = intClient.nextLine();
                // Split the line by using the delimiterÂ ":" (semicolon) and store into array.
                matchedID = bEntry.split(":");
                // JOptionPane.showMessageDialog(null, i);
                if (matchedID[0].equals(currentUserID)) {
                    txtUserID.setText(matchedID[0]);
                    txtFullName.setText(matchedID[3]);
                    txtEmail.setText(matchedID[4]);
                    txtUsername.setText(matchedID[5]);
                    txtPassField.setText(matchedID[6]);
                    txtPhoneNumber.setText(matchedID[7]);
                    switch (matchedID[8]) {
                        case "Male":
                            cmbGender.setSelectedIndex(1);
                            break;
                        case "Female":
                            cmbGender.setSelectedIndex(2);
                            break;
                        default:
                            cmbGender.setSelectedIndex(1);
                    }
                }
            }
            intClient.close();
        } catch (FileNotFoundException ex) {
           // Logger.getLogger(unnamedBorrowMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void updateUserInfo(){
        
        try {
            // Check if textfields are empty
            //emptyFields();
            // To get directory  
            FileDir = System.getProperty("user.dir") + "\\src\\TextFiles\\";
            // To get the book ID
            currentUserID = txtUserID.getText();
            //char [] userpass = txtPassword.getPassword();
            //String userpass = new String(PassField.getPassword());
            // To rename original book.txt to book.bak
            File UserOri = new File(FileDir + "UserProfile.txt");
            File UserBack = new File(FileDir + "UserProfileBack.txt");
            // To check if clientBak.txt is present or not
            if (!UserBack.exists()){
                UserOri.createNewFile();
            }
            // This is for debugging only!
            // JOptionPane.showMessageDialog(null, "renamed");
            // This is to rename the existing book.txt to clientBak.txt
            UserOri.renameTo(UserBack);
            // This is to open, find and replace a specific book record
            // Requires temporary file to store current state
            // FileWriter to write into a new file called book.txt
            FileWriter cd = new FileWriter(FileDir + "UserProfile.txt"); 
            // PrintWriter to print into book.txt
            PrintWriter cdp = new PrintWriter(cd); 
            // This is to open and read clientBak.txt 
            File usertxt = new File(FileDir + "UserProfileBack.txt");
            // This is to instantiate the file opened earlier
            Scanner inputFile = new Scanner(usertxt);
            // This array is to contain all lines
            String[] matchedID;
            // This is only for debugging!
            // boolean itWorked = false;
            // Read lines from the file until no more are left.
            while (inputFile.hasNext())
            {
                // This is for debugging only!
                // JOptionPane.showMessageDialog(null, "In loop");
                // Read the next line.
                String bEntry = inputFile.nextLine();
                // Split the line by using the delimiterÂ ":" (semicolon) and store into array.
                matchedID = bEntry.split(":");
                // Check if the read line has current book ID
                if (matchedID[0].equals(currentUserID)) {
                    // Inserting the new information from the text fields into the book line
                    matchedID[1] = ManagerID;
                    matchedID[2] = userRole;
                    matchedID[3] = txtFullName.getText();
                    matchedID[4] = txtEmail.getText();
                    matchedID[5] = txtUsername.getText();
                    matchedID[6] = String.valueOf(txtPassField.getPassword());
                    matchedID[7] = txtPhoneNumber.getText();
                    matchedID[8] = (String)cmbGender.getSelectedItem();
                    matchedID[9] = "true";
                    
                    //matchedID[8] = "false";
                    
                }
                // Rewrite the new book.txt with values found in clientBak.txt
                cdp.println(matchedID[0] + ":" +
                            matchedID[1] + ":" +
                            matchedID[2] + ":" +
                            matchedID[3] + ":" +
                            matchedID[4] + ":" +
                            matchedID[5] + ":" +
                            matchedID[6] + ":" + 
                            matchedID[7] + ":" + 
                            matchedID[8] + ":" + 
                            matchedID[9]);
                //JOptionPane.showMessageDialog(null, "Yes it worked");
            }
            // Close the clientBak.txt reader
            inputFile.close();
            // This deletes clientBak.txt
            UserBack.delete();
            // This closes the book.txt printer 
            cdp.close();
            saveImage();
            JOptionPane.showMessageDialog(null, "Your profile have been updated!!", "User Information Updated!", JOptionPane.INFORMATION_MESSAGE);
            loadnewUserProfile();
        } catch (Exception ex) {
            //highlightEmpty();
            //JOptionPane.showMessageDialog(null, "Invalid input! Please check your input to proceed.", "Invalid insertion detected!", JOptionPane.ERROR_MESSAGE);
        }
    
    }
    
    private void clearCache(){
        try {
            FileDir = System.getProperty("user.dir") + "\\src\\TextFiles\\";
            File cache = new File(FileDir + "UserCache.txt");
            if (cache.exists()) {
                cache.delete();
            }
        } catch (Exception ex) {
        }
    }
    private void checkUserType(){
         if (txtUserID.getText().contains("CM")) {
                    new APUCMMenu().setVisible(true);
                    this.dispose();
                }
         if(txtUserID.getText().contains("TC")){
             new APUTCMenu().setVisible(true);
             this.dispose();
         }
    }
    
    private void initForm() throws IOException{
        setLogo();
        this.setLocationRelativeTo(null);
        this.chkpass.setSelected(true);
        this.chkpass.setVisible(false);
        this.iconNoSee.setVisible(false);
        this.txtPassField.setEchoChar('*');
        loadUserProfile();
        // Set the initial value for new book
        // This anon class handles window closing event
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e){
                int selection = JOptionPane.showConfirmDialog(null, "Are you sure you want to exit?", "Closing Window", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (selection == JOptionPane.YES_OPTION) {
                    clearCache();
                    setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                } else {
                    setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
                }
            }
        });
       // txaHomeAddress.getDocument().putProperty("filterNewlines", Boolean.TRUE);
      //  inputCharacterValidation();
     }
    //</editor-fold>
    
    
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        updateUserInfo();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        int selection = JOptionPane.showConfirmDialog(null, "Are you sure to go back?", "Back to Main Menu", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (selection == JOptionPane.YES_OPTION) {
            checkUserType();
        }
    }//GEN-LAST:event_btnBackActionPerformed

    private void iconNoSeeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconNoSeeMousePressed
        iconNoSee.setVisible(false);
        iconSee.setVisible(true);
        txtPassField.setEchoChar('*');
    }//GEN-LAST:event_iconNoSeeMousePressed

    private void iconSeeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconSeeMousePressed
        iconNoSee.setVisible(true);
        iconSee.setVisible(false);
        txtPassField.setEchoChar((char) 0);
    }//GEN-LAST:event_iconSeeMousePressed

    private void chkpassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkpassActionPerformed
        if (chkpass.isSelected()) {
            txtPassField.setEchoChar((char) 0);
        } else {
            txtPassField.setEchoChar('*');
        }
    }//GEN-LAST:event_chkpassActionPerformed

    private void btnSelectImgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectImgActionPerformed
        selectImage();
    }//GEN-LAST:event_btnSelectImgActionPerformed
    //</editor-fold>
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(new FlatDarkLaf());
        } catch (Exception ex) {
            System.err.println("Failed to initialize LaF");
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new APUUserProfile().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(APUUserProfile.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JPanel btnPnl;
    private javax.swing.JButton btnSelectImg;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JCheckBox chkpass;
    private javax.swing.JComboBox<String> cmbGender;
    private javax.swing.JLabel iconNoSee;
    private javax.swing.JLabel iconSee;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel lblDesc;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblFullName;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPfp;
    private javax.swing.JLabel lblPhoneNumber;
    private javax.swing.JLabel lblSelectedPic;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUserID;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPanel mainPnl;
    private javax.swing.JPanel profilePnl;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFullName;
    private javax.swing.JPasswordField txtPassField;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtUserID;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
