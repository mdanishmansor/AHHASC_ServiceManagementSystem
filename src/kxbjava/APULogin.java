/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kxbjava;

import com.formdev.flatlaf.FlatDarkLaf;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Scanner;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.event.DocumentEvent;

/**
 *
 * @author User
 */
public class APULogin extends javax.swing.JFrame {
    private boolean Username = false, Password = false;
    private String UserID, username, FileDir, fullname, email, password, phonenumber, gender, ManagerID, currentdate;
    /**
     * Creates new form APULogin
     */
    public APULogin() {
        initComponents();
        initForm();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(68, 68, 68));

        lblTitle.setBackground(new java.awt.Color(68, 68, 68));
        lblTitle.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(218, 0, 55));
        lblTitle.setText("Login");

        txtUsername.setBackground(new java.awt.Color(68, 68, 68));
        txtUsername.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtUsername.setForeground(new java.awt.Color(237, 237, 237));
        txtUsername.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(237, 237, 237)));
        txtUsername.setCaretColor(new java.awt.Color(237, 237, 237));

        txtPassword.setBackground(new java.awt.Color(68, 68, 68));
        txtPassword.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtPassword.setForeground(new java.awt.Color(237, 237, 237));
        txtPassword.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(237, 237, 237)));
        txtPassword.setCaretColor(new java.awt.Color(237, 237, 237));
        txtPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPasswordKeyReleased(evt);
            }
        });

        btnLogin.setBackground(new java.awt.Color(23, 23, 23));
        btnLogin.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnLogin.setForeground(new java.awt.Color(218, 0, 55));
        btnLogin.setText("Login");
        btnLogin.setBorder(null);
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(463, 463, 463)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUsername)
                            .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(523, 523, 523)
                        .addComponent(lblTitle))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(476, 476, 476)
                        .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(487, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(97, 97, 97)
                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(111, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // <editor-fold defaultstate="collapsed" desc="Validation Methods">
    private void showLoginButton(){
        if (Username && Password){
            btnLogin.setVisible(true);
        }
        else
        {
            btnLogin.setVisible(false);
        }
     }
     private void showLoginButton(JTextField txt){
        if ("".equals(txt.getText())){
            Username = false;
        } 
        else {
            Username = true;
        }
        showLoginButton();
     }
           private void showLoginButton(JPasswordField txt){
        if ("".equals(String.valueOf(txtPassword.getPassword()))){
            Password = false;
        } 
        else {
            Password = true;
        }
        showLoginButton();
    
    }
            private void createDir(){
        try {
            FileDir = System.getProperty("user.dir") + "\\src\\TextFiles\\";
            Path dir = Paths.get(FileDir);
            Files.createDirectories(dir);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }
             private void createDatabase(){
        try {
            FileDir = System.getProperty("user.dir") + "\\src\\TextFiles\\";
            File usertxt = new File(FileDir + "UserProfile.txt");
            File customertxt = new File(FileDir + "Customer.txt");
            File appttxt = new File(FileDir + "Appointment.txt");
            //File clienttxt = new File(FileDir + "client.txt");
            if (!usertxt.exists()) {
                usertxt.createNewFile();
            }
            if (!customertxt.exists()) {
                customertxt.createNewFile();
            }
            if (!appttxt.exists()) {
                appttxt.createNewFile();
            }
            //if (!clienttxt.exists()) {
            //    clienttxt.createNewFile();
            //}
        } catch(IOException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }
            
    // </editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="Methods">
    private boolean validateAccount() {
        boolean Authenticate = false;
        try {
            FileDir = System.getProperty("user.dir") + "\\src\\TextFiles\\";
            String User = txtUsername.getText();
            String Pass = String.valueOf(txtPassword.getPassword());
            File usertext = new File(FileDir + "UserProfile.txt");
            if (!usertext.exists()) {
                usertext.createNewFile();
            }
            Scanner inputFile = new Scanner(usertext);
            String[] matchedID;
            while (inputFile.hasNext()) {
                String lEntry = inputFile.nextLine();
                matchedID = lEntry.split(":");
                if (User.equals(matchedID[4]) && Pass.equals(matchedID[5])){
                    Authenticate = true;
                    UserID = matchedID[0];
                    ManagerID = matchedID[1];
                    fullname = matchedID[2];
                    email = matchedID[3];
                    username = matchedID[4];
                    password = matchedID[5];
                    phonenumber = matchedID[6];
                    gender = matchedID[7];
                   } 
            }
            inputFile.close();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);

        }
        return Authenticate;
    }
    //Start the session for the user
    private void userSession(){
         try {
        FileDir = System.getProperty("user.dir") + "\\src\\TextFiles\\";
        File cache = new File(FileDir + "UserCache.txt");
        if (!cache.exists()) {
            cache.createNewFile();
        }
        FileWriter ld = new FileWriter(FileDir + "UserCache.txt", true); 
        PrintWriter ldp = new PrintWriter(ld);
        ldp.println(UserID + ":" + fullname + ":" + email + ":" + username + ":" + password + ":" + phonenumber + ":" + gender);
        ldp.close();
        } catch (Exception ex) {
            
        }
    }
    private void clearCache(){
        try {  
            FileDir = System.getProperty("user.dir") + "\\src\\TextFiles\\";
            File cache = new File(FileDir + "UserCache.txt");
            if (cache.exists()) {
                cache.delete();
            }
        } catch (Exception ex) {
            
        }
    }
    
    //Store the records of the session of the user
    private void storeSession(){
        try {
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy, HH.mm.ss");  
        LocalDateTime now = LocalDateTime.now();  
        currentdate = dtf.format(now);
        FileDir = System.getProperty("user.dir") + "\\src\\TextFiles\\";
        File records = new File(FileDir + "LoginRecords.txt");
        if (!records.exists()) {
            records.createNewFile();
        }
        FileWriter ld = new FileWriter(FileDir + "LoginRecords.txt", true); 
        PrintWriter ldp = new PrintWriter(ld);
        ldp.println(UserID + ":" + ManagerID + ":" + fullname + ":" + username + ":" + password + ":" + currentdate);
        ldp.close();
        } catch (Exception ex) {
            
        }
    }
    
    private void checkUserType(){
         if (UserID.contains("CM")) {
                    new APUCMMenu().setVisible(true);
                    this.dispose();
                }
         if(UserID.contains("TC")){
             new APUTCMenu().setVisible(true);
             this.dispose();
         }
    }
    private void initForm(){
        // Create the required directory for first time boot
        createDir();
        // Create the required database textfiles for first time boot
        createDatabase();
        this.setSize(1170,800);
        this.setLocation(600,150);
        btnLogin.setVisible(false); // This will prevent the login button from being pressed right after startup
        // This anon class handles textfield changes for username entry
        txtUsername.getDocument().addDocumentListener(new APUDocumentListener(){

            @Override
            public void insertUpdate(DocumentEvent e) {
                showLoginButton(txtUsername);
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                showLoginButton(txtUsername);
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                showLoginButton(txtUsername);

            }
        });
        
        // This anon class handles textfield changes for password entry
        txtPassword.getDocument().addDocumentListener(new APUDocumentListener(){

            @Override
            public void insertUpdate(DocumentEvent e) {
                showLoginButton(txtPassword);
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                showLoginButton(txtPassword);
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                showLoginButton(txtPassword);

            }
        });

        // This anon class handles window closing event
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e){
                int selection = JOptionPane.showConfirmDialog(null, "Are you sure you want to exit?", "Closing Window", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (selection == JOptionPane.YES_OPTION) {
                    clearCache();
                    setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                } else {
                    setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
                }
            }
        });
    }
    //</editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="Button Events">
    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        if(validateAccount()){
            JOptionPane.showMessageDialog(null, "Login Successfully! Going to Main Menu", "Authentication Successfully!", JOptionPane.INFORMATION_MESSAGE);
           userSession();
           storeSession();
           checkUserType();
        } else {
            JOptionPane.showMessageDialog(null, "Authentication failed! Wrong password or username", "Failure of Authentication", JOptionPane.ERROR_MESSAGE);
        
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void txtPasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordKeyReleased
        // TODO add your handling code here:
        if("".equals(String.valueOf(txtPassword.getPassword())) && "".equals(txtUsername.getText())){
            JOptionPane.showMessageDialog(null, "Please enter the password!", "Failure of Authentication", JOptionPane.ERROR_MESSAGE);
        }else {
             if(evt.getKeyCode()==KeyEvent.VK_ENTER){
              if(validateAccount()){
              JOptionPane.showMessageDialog(null, "Login Successfully! Going to Main Menu", "Authentication Successfully!", JOptionPane.INFORMATION_MESSAGE);
              userSession();
              checkUserType();
        } else {
            JOptionPane.showMessageDialog(null, "Authentication failed! Wrong password or username", "Failure of Authentication", JOptionPane.ERROR_MESSAGE);
        
        }
        }
        }
       
    }//GEN-LAST:event_txtPasswordKeyReleased
    // </editor-fold>
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       try {
            UIManager.setLookAndFeel(new FlatDarkLaf());
        } catch (Exception ex) {
            System.err.println("Fail Look and Feel");
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new APULogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
